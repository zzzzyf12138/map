总体框架
pages 存放页面
utils   存放工具模块（例如格式化时间的模块）
.eslintrc.js	是一个名为 ESLINT 的工具的配置文件，目标是使代码更加一致并避免错误
app.js	小程序项目的入口文件
app.json	小程序项目的全局配置文件
app.wxss	小程序项目的全局样式文件
project.config.json	项目公共配置文件
project.private.config.json	项目个人配置文件，相同设置优先级高于公共配置文件
sitemap.json	用来配置小程序及其页面是否允许被微信索引


pages文件夹
pages文件夹下的页面，每个页面由4个
.js 文件	页面的脚本文件，存放页面的数据、事件处理函数等
.json 文件	当前页面的配置文件，配置窗口的外观、表现等
.wxml 文件	页面的模板结构文件
.wxss 文件	当前页面的样式表文件

Json文件配置项

app.json：全局配置
包含pages页面路径、window窗口定义（背景色、文字颜色）、style组件样式版本、sitemaplocation等


project.config.json & project.private.config 文件
project.config.json 是项目公共配置文件，用来记录对小程序开发工具所做的个性化配置
例如，description文件描述，setting编译相关配置，projectname项目名称，appid小程序ID
project.private.config是个人配置文件，相同设置优先级高于公共配置文件，也就是运行的时候个人配置文件里相同设置会覆盖公共配置文件。


sitemap.json文件
配置小程序页面是否允许微信索引。当用户的搜索关键字和页面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中。
action页面是否被索引、page索引页面



WXML WXSS JS逻辑交互
WXML是小程序框架结构，类似HTML
WXSS类似于网页开发中的 CSS
JS脚本分为三大类：
app.js	整个小程序项目的入口文件，通过调用 App() 函数来启动整个小程序;
page .js	页面的入口文件，通过调用 Page() 函数来创建并运行页面
function.js	普通的功能模块文件，用来封装公共的函数或属性供页面使用;








宿主环境：通信模型、运行机制、组件和API

通信模型
1.主体：渲染层（WXML和WXSS）和逻辑层（JS）
2.模型：渲染层和逻辑层，渲染层和第三方服务器

运行机制
1.启动：把代码包下载到本地，解析app.json 全局配置文件，执行app.js入口文件
2.渲染首页：渲染过程：加载解析页面的json配置文件，加载wxml和wxss，执行js文件

组件：视图容器
view：类似于div块级元素
scroll-view：滚动块级区域
swiper：轮播图


组件：内容组件
text	文本组件，rich-text可以进行渲染
progress	进度条  可实现动画进度或者下载进度等
icon	图标组件，通常设置class="icon-box"进行面向对象操作

组件：内容组件
button	按钮组件通过 open-type 属性可以调用微信提供的各种功能（客服、转发、获取用户授权、获取用户信息等）
image	图片组件  默认宽度约 300px、高度约 240px
navigator	页面导航组件  类似于 HTML 中的 a 链接

数据绑定原则
js：WXML 的动态数据来自于 JS 端中的 data 对象，所以把数据定义到 data 对象中即可;
wxml“使用 Mustache 语法（简单点就两大括号）将变量包起来即可。


事件
tap	手指触摸后马上离开，类似于 HTML 中的 click 事件  用bindtap绑定
input  文本框的输入事件  bindinput绑定
change	  状态改变时触发  bindchange绑定


条件渲染wx：if
列表渲染wx：for


WXSS
rpx：在宽度上等分为 750 份（即：当前屏幕的总宽度为 750rpx ），进而实现不同尺寸屏幕适配




学生信息管理系统笔记
函数框架storage.js
数据存储在前端的student变量里面，定义STORAGE_KEY读取
定义getStudents()函数，通过STORAGE_KEY读取student变量
定义saveStudent(student)函数，保存刚刚输入的学生信息（集合了增和改的功能），通过findIndex查找当前students里面是否有姓名相同的，有则改，无则增（在students里面push刚刚的数据），并使用wx.setStorageSync更新数据
定义deleteStudent(index)，通过前端传进来的index，对students对象使用splice删除，并使用wx.setStorageSync进行更新
最后，使用module.exports导出上述框架


index页面
首页button，点击添加学生，通过bintap事件调用js的goToAddPage()函数，该函数通过自带的wx.navigateTo，转向url对应的地方

对于学生信息列表，存储于block中，通过wx:for进行遍历数据绑定的{{students}}，并使用wx:key存储每次遍历的index

列表中每个元素的删除button，通过bindtap事件调用delete()函数并传入index，该函数通过调用storage的deleteStudent函数（需要读取index），删除后，使用loadStudents函数进行页面更新（loadStudents需要调用getStudents进行读取数据并更新）

列表中每个元素的编辑，通过bindtap="goToEditPage"传入index，wx.navigateTo定位到url，此时url后面要加上id=index


add页面
姓名的input，首先通过value获取student.name，输入的数据调用updateName(e)，更新student.name为刚刚输入的
年龄的input也是同理。
保存按钮，通过调用saveStudent()，进而调用框架的saveStudent，最后用wx.navigateBack返回





